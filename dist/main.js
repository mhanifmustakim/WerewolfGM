/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./src/Game.js":
/*!*********************!*\
  !*** ./src/Game.js ***!
  \*********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _Roles__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Roles */ \"./src/Roles.js\");\n/* harmony import */ var _Teams__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Teams */ \"./src/Teams.js\");\n\r\n\r\n\r\nconst Game = (function () {\r\n    let players = [];\r\n    let isGameOver = false;\r\n    let dayCount = 0;\r\n    let winner = null;\r\n    let roleQuantities = null;\r\n    let nightRoles = null;\r\n    let nightActions = null;\r\n\r\n    const reset = () => {\r\n        players = [];\r\n        roleQuantities = null;\r\n        nightRoles = null;\r\n    }\r\n\r\n    const addPlayer = (player) => {\r\n        players.push(player);\r\n    };\r\n\r\n    const addDayCount = () => dayCount += 1;\r\n\r\n    const removePlayerWithId = (id) => {\r\n        const index = players.findIndex((player) => player.id === id);\r\n        players.splice(index, 1);\r\n    }\r\n\r\n    const getPlayerById = (id) => {\r\n        return players.filter((player) => player.id == id)[0]\r\n    };\r\n\r\n    const findPlayersByAttr = (attr) => {\r\n        const targetPlayers = [];\r\n\r\n        players.forEach((player) => {\r\n            let targetFlag = true;\r\n            Object.entries(attr).forEach(([key, value]) => {\r\n                // Exclude certain roles\r\n                if (key == \"excludeRole\") {\r\n                    if (value == player.roleName) {\r\n                        targetFlag = false;\r\n                    }\r\n                } else { // Normal attribute of player\r\n                    if (player[key] !== value) {\r\n                        targetFlag = false;\r\n                    }\r\n                }\r\n            })\r\n\r\n            if (targetFlag) {\r\n                targetPlayers.push(player);\r\n            }\r\n        })\r\n\r\n        return targetPlayers\r\n    };\r\n\r\n    const voteOut = (playerId) => {\r\n        const player = getPlayerById(playerId);\r\n        player.die();\r\n        checkGameOver();\r\n    };\r\n\r\n    const checkGameOver = () => {\r\n        const teams = Array.from(new Set(findPlayersByAttr({ isAlive: true }).map((player) => player.role.team)));\r\n        teams.forEach((team) => {\r\n            if (_Teams__WEBPACK_IMPORTED_MODULE_1__[\"default\"][team].checkWinCondition()) {\r\n                winner = team;\r\n                isGameOver = true;\r\n                // console.log(winner + \" won!\");\r\n            }\r\n        })\r\n    }\r\n\r\n    // Assumes the number of players match the role quantities\r\n    const assignRoles = () => {\r\n        const roles = [];\r\n        // fill roles with quantity * roleName\r\n        Object.entries(roleQuantities).forEach(([roleName, quantity]) => {\r\n            for (let i = 0; i < quantity; i++) roles.push(roleName);\r\n        });\r\n\r\n        players.forEach((player) => {\r\n            const randomIndex = Math.floor(Math.random() * roles.length);\r\n            const roleName = roles.splice(randomIndex, 1);\r\n            player.setRole(roleName);\r\n        })\r\n    };\r\n\r\n    const setRoleQuantities = (newRoleQuantities) => {\r\n        roleQuantities = newRoleQuantities;\r\n        nightRoles = Array.from(new Set(Object.keys(roleQuantities)\r\n            .filter((roleIdentifier) => _Roles__WEBPACK_IMPORTED_MODULE_0__[\"default\"][roleIdentifier]().abilities !== null)))\r\n            .filter((roleIdentifier) => roleQuantities[roleIdentifier] > 0);\r\n    };\r\n\r\n    const start = () => {\r\n        players.forEach((player) => player.reset());\r\n        isGameOver = false;\r\n        dayCount = 0;\r\n        winner = null;\r\n\r\n        assignRoles();\r\n    };\r\n\r\n\r\n    const startNight = () => {\r\n        nightActions = {};\r\n    };\r\n\r\n    const addAction = (roleName, actions) => {\r\n        nightActions[roleName] = actions;\r\n    };\r\n\r\n    const endNight = () => {\r\n        const attacked = new Set();\r\n        const rescued = new Set();\r\n\r\n        // Extract attacked Ids and rescued Ids\r\n        Object.values(nightActions).forEach((actions) => {\r\n            Object.entries(actions).forEach(([key, targetId]) => {\r\n                switch (key) {\r\n                    case \"attacked\":\r\n                        attacked.add(targetId);\r\n                        break;\r\n                    case \"rescued\":\r\n                        rescued.add(targetId);\r\n                        break;\r\n                }\r\n            })\r\n        })\r\n\r\n        const killedIds = Array.from(attacked).filter((id) => !rescued.has(id)).map((id) => parseInt(id));\r\n        const rescuedIds = Array.from(attacked).filter((id) => rescued.has(id)).map((id) => parseInt(id));\r\n\r\n        killedIds.forEach((id) => {\r\n            const player = getPlayerById(id);\r\n            if (\"onKilledAtNight\" in player.role) {\r\n                const results = player.role.onKilledAtNight();\r\n                Object.entries(results).forEach(([result, ids]) => {\r\n                    switch (result) {\r\n                        case \"kill\":\r\n                            ids.forEach((resultId) => {\r\n                                killedIds.push(resultId);\r\n                                Game.getPlayerById(resultId).die();\r\n                            })\r\n                            break;\r\n                        case \"save\":\r\n                            ids.forEach((resultId) => {\r\n                                const index = killedIds.indexOf(resultId);\r\n                                killedIds.splice(index, 1);\r\n                            })\r\n                            break;\r\n                    }\r\n                })\r\n            } else {\r\n                player.die()\r\n            }\r\n        });\r\n        // console.log(`Players killed: ${killedIds.map((id) => getPlayerById(id).name)}`);\r\n\r\n        rescuedIds.forEach((id) => {\r\n            Object.entries(nightActions).forEach(([role, actions]) => {\r\n                Object.entries(actions).forEach(([key, targetId]) => {\r\n                    if (key == \"rescued\" && targetId == id) {\r\n                        Game.findPlayersByAttr({ roleName: role, isAlive: true }).forEach((player) => player.role.abilityUse -= 1)\r\n                    }\r\n                })\r\n            })\r\n        })\r\n        checkGameOver();\r\n        return Array.from(new Set(killedIds)).map((id) => getPlayerById(id));\r\n    }\r\n\r\n    return {\r\n        get players() {\r\n            return players;\r\n        },\r\n        get isGameOver() {\r\n            return isGameOver;\r\n        },\r\n        get winner() {\r\n            return winner;\r\n        },\r\n        get roleQuantities() {\r\n            return roleQuantities;\r\n        },\r\n        get dayCount() {\r\n            return dayCount;\r\n        },\r\n        get nightRoles() {\r\n            return nightRoles\r\n        },\r\n        setRoleQuantities,\r\n        addPlayer,\r\n        removePlayerWithId,\r\n        getPlayerById,\r\n        findPlayersByAttr,\r\n        addAction,\r\n        start,\r\n        voteOut,\r\n        reset,\r\n        addDayCount,\r\n        startNight,\r\n        endNight\r\n    }\r\n})()\r\n\r\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Game);\n\n//# sourceURL=webpack://werewolfgm/./src/Game.js?");

/***/ }),

/***/ "./src/GameTests.js":
/*!**************************!*\
  !*** ./src/GameTests.js ***!
  \**************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _Game__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Game */ \"./src/Game.js\");\n/* harmony import */ var _Player__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Player */ \"./src/Player.js\");\n/* harmony import */ var _Roles__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Roles */ \"./src/Roles.js\");\n/* harmony import */ var _Teams__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./Teams */ \"./src/Teams.js\");\n\r\n\r\n\r\n\r\n\r\nconst Test = (function () {\r\n    const generatePlayers = (n) => {\r\n        for (let i = 0; i < n; i++) {\r\n            const player = (0,_Player__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(`Player ${i}`);\r\n            _Game__WEBPACK_IMPORTED_MODULE_0__[\"default\"].addPlayer(player);\r\n        };\r\n    };\r\n\r\n    const chooseRandom = (arr) => {\r\n        const randomIndex = Math.floor(Math.random() * arr.length);\r\n        return arr[randomIndex];\r\n    };\r\n\r\n    // Tests the role distribution of the algorithm based on index of player\r\n    const roleDistributionTest = (numPlayers, roleQuantities, numExperiments) => {\r\n        _Game__WEBPACK_IMPORTED_MODULE_0__[\"default\"].reset();\r\n        const roles = Array.from(new Set(Object.keys(roleQuantities))).map((roleName) => _Roles__WEBPACK_IMPORTED_MODULE_2__[\"default\"][roleName]().name);\r\n\r\n        generatePlayers(numPlayers);\r\n\r\n        // Set up object to track amount of times a player got a role\r\n        const counts = {}\r\n        _Game__WEBPACK_IMPORTED_MODULE_0__[\"default\"].players.forEach((player) => {\r\n            counts[player.name] = {};\r\n            roles.forEach((roleName) => {\r\n                counts[player.name][roleName] = 0;\r\n            })\r\n        })\r\n\r\n        // Start experiment\r\n        _Game__WEBPACK_IMPORTED_MODULE_0__[\"default\"].setRoleQuantities(roleQuantities);\r\n        for (let i = 0; i < numExperiments; i++) {\r\n            _Game__WEBPACK_IMPORTED_MODULE_0__[\"default\"].start();\r\n\r\n            _Game__WEBPACK_IMPORTED_MODULE_0__[\"default\"].players.forEach((player) => counts[player.name][player.roleName] += 1);\r\n        }\r\n\r\n        // Give out statistics\r\n        _Game__WEBPACK_IMPORTED_MODULE_0__[\"default\"].players.forEach((player) => {\r\n            roles.forEach((roleName) => {\r\n                counts[player.name][roleName] /= numExperiments;\r\n            })\r\n        })\r\n\r\n        console.log(counts);\r\n    }\r\n\r\n    const cycleTest = (numPlayers, roleQuantities, noVoteAtFirstDay = true) => {\r\n        _Game__WEBPACK_IMPORTED_MODULE_0__[\"default\"].reset();\r\n\r\n        generatePlayers(numPlayers);\r\n        _Game__WEBPACK_IMPORTED_MODULE_0__[\"default\"].setRoleQuantities(roleQuantities);\r\n        _Game__WEBPACK_IMPORTED_MODULE_0__[\"default\"].start();\r\n\r\n        const rolesWithNightActions = Array.from(new Set(Object.keys(roleQuantities)))\r\n            .filter((roleName) => _Roles__WEBPACK_IMPORTED_MODULE_2__[\"default\"][roleName]().abilities !== null)\r\n            .sort();\r\n\r\n        while (!_Game__WEBPACK_IMPORTED_MODULE_0__[\"default\"].isGameOver) {\r\n            // Start Day cycle\r\n            if (noVoteAtFirstDay) {\r\n                noVoteAtFirstDay = false;\r\n            } else {\r\n                const voteCandidates = _Game__WEBPACK_IMPORTED_MODULE_0__[\"default\"].findPlayersByAttr({ isAlive: true });\r\n                const playerVotedOut = chooseRandom(voteCandidates);\r\n                // console.log(`${playerVotedOut.name} has been voted out.`);\r\n                _Game__WEBPACK_IMPORTED_MODULE_0__[\"default\"].voteOut(playerVotedOut.id);\r\n            }\r\n\r\n            if (_Game__WEBPACK_IMPORTED_MODULE_0__[\"default\"].isGameOver) break\r\n\r\n            // Start Night cycle\r\n            _Game__WEBPACK_IMPORTED_MODULE_0__[\"default\"].startNight();\r\n            rolesWithNightActions.forEach((roleName) => {\r\n                const role = _Roles__WEBPACK_IMPORTED_MODULE_2__[\"default\"][roleName]();\r\n\r\n                if (_Game__WEBPACK_IMPORTED_MODULE_0__[\"default\"].findPlayersByAttr({ roleName: role.name, isAlive: true }).length > 0) {\r\n                    Object.entries(role.abilities).forEach(([ability, targetAttr]) => {\r\n                        const targetCandidates = _Game__WEBPACK_IMPORTED_MODULE_0__[\"default\"].findPlayersByAttr(targetAttr);\r\n                        const randomTarget = chooseRandom(targetCandidates);\r\n                        role[ability](randomTarget.id);\r\n\r\n                        // console.log(`${role.name}: ${ability} ${randomTarget.name}`);\r\n                    })\r\n                }\r\n            })\r\n\r\n            _Game__WEBPACK_IMPORTED_MODULE_0__[\"default\"].endNight();\r\n        }\r\n\r\n        return _Game__WEBPACK_IMPORTED_MODULE_0__[\"default\"].winner\r\n\r\n    }\r\n\r\n    const nSimulations = (numPlayers, roleQuantities, numExperiments) => {\r\n        const teams = Array.from(Object.keys(_Teams__WEBPACK_IMPORTED_MODULE_3__[\"default\"]));\r\n\r\n        const counts = {};\r\n        teams.forEach((team) => counts[team] = 0);\r\n\r\n        for (let i = 0; i < numExperiments; i++) {\r\n            const winner = cycleTest(numPlayers, roleQuantities);\r\n            counts[winner] += 1;\r\n        }\r\n\r\n        teams.forEach((team) => counts[team] /= numExperiments);\r\n        console.log(counts);\r\n    }\r\n\r\n    return {\r\n        roleDistributionTest,\r\n        cycleTest,\r\n        nSimulations\r\n    }\r\n})()\r\n\r\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Test);\n\n//# sourceURL=webpack://werewolfgm/./src/GameTests.js?");

/***/ }),

/***/ "./src/Player.js":
/*!***********************!*\
  !*** ./src/Player.js ***!
  \***********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _Roles__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Roles */ \"./src/Roles.js\");\n\r\n\r\nconst Player = function (name) {\r\n    const id = Player.getId();\r\n    let isAlive = true;\r\n    let role = null;\r\n    let roleName = null;\r\n    let type = null;\r\n\r\n    const setRole = (roleIdentifier) => {\r\n        role = _Roles__WEBPACK_IMPORTED_MODULE_0__[\"default\"][roleIdentifier]()\r\n        roleName = role.name;\r\n        type = role.type;\r\n    }\r\n\r\n    const die = () => {\r\n        isAlive = false;\r\n    }\r\n\r\n    const reset = () => {\r\n        isAlive = true;\r\n        role = null;\r\n        roleName = null;\r\n        type = null;\r\n    }\r\n\r\n    return {\r\n        get name() {\r\n            return name;\r\n        },\r\n        get id() {\r\n            return id;\r\n        },\r\n        get role() {\r\n            return role;\r\n        },\r\n        get isAlive() {\r\n            return isAlive;\r\n        },\r\n        get roleName() {\r\n            return roleName;\r\n        },\r\n        get type() {\r\n            return type;\r\n        },\r\n        setRole,\r\n        die,\r\n        reset\r\n    }\r\n}\r\n\r\nPlayer.nextId = 1;\r\nPlayer.getId = function () {\r\n    const current = Player.nextId;\r\n    Player.nextId += 1;\r\n    return current;\r\n};\r\n\r\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Player);\n\n//# sourceURL=webpack://werewolfgm/./src/Player.js?");

/***/ }),

/***/ "./src/Roles.js":
/*!**********************!*\
  !*** ./src/Roles.js ***!
  \**********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _Game__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Game */ \"./src/Game.js\");\n/* harmony import */ var _RolesUtils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./RolesUtils */ \"./src/RolesUtils.js\");\n\r\n\r\n\r\n\r\nconst Roles = {\r\n    citizen: function () {\r\n        const self = (0,_RolesUtils__WEBPACK_IMPORTED_MODULE_1__.createRole)({\r\n            id: \"citizen\",\r\n            name: \"Citizen\",\r\n            type: \"Human\",\r\n            team: \"Citizens\",\r\n            abilities: null,\r\n            description: [\"You are a normal citizen with no special abilities.\"],\r\n        })\r\n\r\n        return self\r\n    },\r\n\r\n    werewolf: function () {\r\n        const self = (0,_RolesUtils__WEBPACK_IMPORTED_MODULE_1__.createRole)({\r\n            id: \"werewolf\",\r\n            name: \"Werewolf\",\r\n            type: \"Werewolf\",\r\n            team: \"Werewolves\",\r\n            abilities: { \"attack\": { isAlive: true, type: \"Human\" } },\r\n            description: [\"The werewolves choose one player to attack every night.\"],\r\n        });\r\n\r\n        self.inputSpec.min = 1;\r\n        self.attack = (id) => {\r\n            (0,_RolesUtils__WEBPACK_IMPORTED_MODULE_1__.actionAttack)(self.name, id)\r\n            return true\r\n        };\r\n        self.onInitialReveal = () => {\r\n            const werewolfNames = _Game__WEBPACK_IMPORTED_MODULE_0__[\"default\"].findPlayersByAttr({ type: \"Werewolf\" }).map((player) => player.name);\r\n            return [\"The werewolves are\", werewolfNames.join(\", \")];\r\n        }\r\n\r\n        return self\r\n    },\r\n\r\n    doctor: function () {\r\n        const self = (0,_RolesUtils__WEBPACK_IMPORTED_MODULE_1__.createRole)({\r\n            id: \"doctor\",\r\n            name: \"Doctor\",\r\n            type: \"Human\",\r\n            team: \"Citizens\",\r\n            abilities: { \"heal\": { isAlive: true, excludeRole: \"Doctor\" } },\r\n            description: [\"The doctor chooses one player to heal every night (not himself). \", \"If that player is attacked, that player lives.\"],\r\n        });\r\n\r\n        self.inputSpec.max = 1;\r\n        self.heal = (id) => {\r\n            (0,_RolesUtils__WEBPACK_IMPORTED_MODULE_1__.actionRescue)(self.name, id);\r\n            return true;\r\n        };\r\n\r\n        return self\r\n    },\r\n\r\n    lover: function () {\r\n        const self = (0,_RolesUtils__WEBPACK_IMPORTED_MODULE_1__.createRole)({\r\n            id: \"lover\",\r\n            name: \"Lovers\",\r\n            type: \"Human\",\r\n            team: \"Citizens\",\r\n            abilities: null,\r\n            description: [\"You truly love each other.\", \"If one is killed at night, the other one dies out of sorrow.\"]\r\n        });\r\n\r\n        self.inputSpec.max = 2;\r\n        self.inputSpec.step = 2;\r\n\r\n        self.onInitialReveal = () => {\r\n            const loverNames = _Game__WEBPACK_IMPORTED_MODULE_0__[\"default\"].findPlayersByAttr({ roleName: self.name }).map((player) => player.name);\r\n            return [\"The lovers are\", loverNames.join(\" & \")];\r\n        }\r\n\r\n        self.onKilledAtNight = () => {\r\n            const lovers = _Game__WEBPACK_IMPORTED_MODULE_0__[\"default\"].findPlayersByAttr({ roleName: self.name, isAlive: true });\r\n            return {\r\n                kill: lovers.map((loverPlayer) => loverPlayer.id)\r\n            }\r\n        }\r\n\r\n        return self\r\n    },\r\n\r\n    bodyguard: function () {\r\n        const self = (0,_RolesUtils__WEBPACK_IMPORTED_MODULE_1__.createRole)({\r\n            id: \"bodyguard\",\r\n            name: \"Bodyguard\",\r\n            type: \"Human\",\r\n            team: \"Citizens\",\r\n            abilities: { \"guard\": { isAlive: true, excludeRole: \"Bodyguard\" } },\r\n            description: [\"You are a strong bodyguard.\", \"You can choose one player to protect every night.\", \"You can only survive one attack per game\", \"(You automatically protect yourself every night)\"]\r\n        });\r\n\r\n        self.abilityUse = 1;\r\n        self.inputSpec.max = 1;\r\n        self.guard = (id) => {\r\n            (0,_RolesUtils__WEBPACK_IMPORTED_MODULE_1__.actionRescue)(self.name, id);\r\n            return true;\r\n        };\r\n\r\n        self.onKilledAtNight = () => {\r\n            const playerId = _Game__WEBPACK_IMPORTED_MODULE_0__[\"default\"].findPlayersByAttr({ roleName: self.name })[0].id;\r\n            if (self.abilityUse > 0) {\r\n                self.abilityUse -= 1;\r\n                return { save: [playerId] }\r\n            }\r\n\r\n            return { kill: [playerId] }\r\n        }\r\n\r\n        return self\r\n    }\r\n}\r\n\r\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Roles);\n\n//# sourceURL=webpack://werewolfgm/./src/Roles.js?");

/***/ }),

/***/ "./src/RolesUtils.js":
/*!***************************!*\
  !*** ./src/RolesUtils.js ***!
  \***************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   actionAttack: () => (/* binding */ actionAttack),\n/* harmony export */   actionRescue: () => (/* binding */ actionRescue),\n/* harmony export */   createRole: () => (/* binding */ createRole)\n/* harmony export */ });\n/* harmony import */ var _Game__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Game */ \"./src/Game.js\");\n\r\n\r\nconst createRole = ({ id, name, type, team, abilities, description }) => {\r\n    const inputSpec = {\r\n        min: 0,\r\n        max: Infinity,\r\n        step: 1\r\n    }\r\n\r\n    let abilityUse = Infinity;\r\n\r\n    return {\r\n        get id() {\r\n            return id;\r\n        },\r\n        get name() {\r\n            return name;\r\n        },\r\n        get type() {\r\n            return type;\r\n        },\r\n        get abilities() {\r\n            return abilities;\r\n        },\r\n        get team() {\r\n            return team;\r\n        },\r\n        get description() {\r\n            return description;\r\n        },\r\n        get inputSpec() {\r\n            return inputSpec;\r\n        },\r\n        abilityUse\r\n    };\r\n};\r\n\r\nconst actionAttack = (attackerName, victimId) => {\r\n    _Game__WEBPACK_IMPORTED_MODULE_0__[\"default\"].addAction(attackerName, { \"attacked\": victimId })\r\n}\r\n\r\nconst actionRescue = (protectorName, protectedId) => {\r\n    _Game__WEBPACK_IMPORTED_MODULE_0__[\"default\"].addAction(protectorName, { \"rescued\": protectedId })\r\n}\r\n\r\n\n\n//# sourceURL=webpack://werewolfgm/./src/RolesUtils.js?");

/***/ }),

/***/ "./src/Teams.js":
/*!**********************!*\
  !*** ./src/Teams.js ***!
  \**********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _Game__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Game */ \"./src/Game.js\");\n\r\n\r\nconst Teams = {\r\n    \"Citizens\": {\r\n        \"winCondition\": \"Eliminate all werewolves.\",\r\n        \"checkWinCondition\": function () {\r\n            const numWerewolves = _Game__WEBPACK_IMPORTED_MODULE_0__[\"default\"].findPlayersByAttr({ type: \"Werewolf\", isAlive: true }).length;\r\n            return numWerewolves == 0;\r\n        }\r\n    },\r\n\r\n    \"Werewolves\": {\r\n        \"winCondition\": \"Manipulate the citizens. You win when the No. Werewolves is equal to No. Humans\",\r\n        \"checkWinCondition\": function () {\r\n            const numWerewolves = _Game__WEBPACK_IMPORTED_MODULE_0__[\"default\"].findPlayersByAttr({ type: \"Werewolf\", isAlive: true }).length;\r\n            const numHumans = _Game__WEBPACK_IMPORTED_MODULE_0__[\"default\"].findPlayersByAttr({ type: \"Human\", isAlive: true }).length;\r\n            return numWerewolves >= numHumans;\r\n        }\r\n    },\r\n}\r\n\r\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Teams);\n\n//# sourceURL=webpack://werewolfgm/./src/Teams.js?");

/***/ }),

/***/ "./src/View.js":
/*!*********************!*\
  !*** ./src/View.js ***!
  \*********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _ViewComponent__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./ViewComponent */ \"./src/ViewComponent.js\");\n/* harmony import */ var _ViewControl__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./ViewControl */ \"./src/ViewControl.js\");\n/* harmony import */ var _Game__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Game */ \"./src/Game.js\");\n\r\n\r\n\r\n\r\nconst View = (function () {\r\n    const mainDiv = document.querySelector(\"#main\");\r\n\r\n    const clear = (container) => container.innerHTML = \"\";\r\n\r\n    const updatePlayersList = (playersList, actionBtnCallback, attr = null) => {\r\n        const newPlayerElements = (0,_ViewComponent__WEBPACK_IMPORTED_MODULE_0__.PlayersNodeList)(attr);\r\n        clear(playersList);\r\n\r\n        newPlayerElements.forEach((playerElement) => {\r\n            const actionButtonContainer = document.createElement(\"div\");\r\n            const playerId = playerElement.getAttribute(\"data-id\");\r\n            const actionButton = actionBtnCallback(playerId);\r\n            actionButtonContainer.appendChild(actionButton);\r\n\r\n            playerElement.appendChild(actionButtonContainer);\r\n            playersList.appendChild(playerElement);\r\n        });\r\n    }\r\n\r\n    const displayStart = () => {\r\n        clear(mainDiv);\r\n        const gameTitle = (0,_ViewComponent__WEBPACK_IMPORTED_MODULE_0__.GameTitle)();\r\n        const addPlayerForm = (0,_ViewComponent__WEBPACK_IMPORTED_MODULE_0__.AddPlayerForm)();\r\n        const playersList = document.createElement(\"ol\");\r\n        playersList.id = \"players-list\";\r\n\r\n        mainDiv.appendChild(gameTitle);\r\n        mainDiv.appendChild(addPlayerForm);\r\n        mainDiv.appendChild(playersList);\r\n        updatePlayersList(playersList, _ViewComponent__WEBPACK_IMPORTED_MODULE_0__.Buttons.removePlayerBtn);\r\n\r\n        const nextBtn = _ViewComponent__WEBPACK_IMPORTED_MODULE_0__.Buttons.transitionBtn(displaySelectMode, \"Select Game Mode\");\r\n        nextBtn.id = \"next-btn\";\r\n        mainDiv.appendChild(nextBtn);\r\n    }\r\n\r\n    const displaySelectMode = () => {\r\n        clear(mainDiv);\r\n        const gameTitle = (0,_ViewComponent__WEBPACK_IMPORTED_MODULE_0__.GameTitle)();\r\n        const container = document.createElement(\"div\");\r\n        const modeSelectionTitle = document.createElement(\"h3\");\r\n        const modeSelectionButtons = document.createElement(\"div\");\r\n        const handOverModeBtn = _ViewComponent__WEBPACK_IMPORTED_MODULE_0__.Buttons.selectModeBtn(\"handOver\");\r\n        const gameMasterModeBtn = _ViewComponent__WEBPACK_IMPORTED_MODULE_0__.Buttons.selectModeBtn(\"gameMaster\");\r\n\r\n        modeSelectionButtons.appendChild(handOverModeBtn);\r\n        modeSelectionButtons.appendChild(gameMasterModeBtn);\r\n\r\n        modeSelectionTitle.textContent = \"Select Game Mode: \";\r\n        container.appendChild(modeSelectionTitle);\r\n        container.appendChild(modeSelectionButtons);\r\n\r\n        mainDiv.appendChild(gameTitle);\r\n        mainDiv.appendChild(container);\r\n\r\n        const backBtn = _ViewComponent__WEBPACK_IMPORTED_MODULE_0__.Buttons.transitionBtn(displayStart, \"Back\");\r\n        mainDiv.appendChild(backBtn);\r\n    }\r\n\r\n    const displaySelectRoleQuantities = () => {\r\n        clear(mainDiv);\r\n        const gameTitle = (0,_ViewComponent__WEBPACK_IMPORTED_MODULE_0__.GameTitle)();\r\n        const container = document.createElement(\"div\");\r\n        const header = document.createElement(\"div\");\r\n        const roleQuantitiesForm = (0,_ViewComponent__WEBPACK_IMPORTED_MODULE_0__.RoleQuantitiesForm)();\r\n\r\n        const headerTitle = document.createElement(\"h4\");\r\n        headerTitle.textContent = \"Select Quantities of each Role: \";\r\n        const headerInfo = document.createElement(\"p\");\r\n        headerInfo.innerHTML = `Amount unallocated: <span id=\"amountUnallocated\"></span>`;\r\n        header.appendChild(headerTitle);\r\n        header.appendChild(headerInfo);\r\n\r\n        container.appendChild(header);\r\n        container.appendChild(roleQuantitiesForm);\r\n        mainDiv.appendChild(gameTitle);\r\n        mainDiv.appendChild(container);\r\n\r\n        const transitionBtns = document.createElement(\"div\");\r\n        const backBtn = _ViewComponent__WEBPACK_IMPORTED_MODULE_0__.Buttons.transitionBtn(displaySelectMode, \"Back\");\r\n        const nextBtn = _ViewComponent__WEBPACK_IMPORTED_MODULE_0__.Buttons.startGameBtn();\r\n        nextBtn.id = \"start-game-btn\"; // To be found by ViewControl\r\n\r\n        transitionBtns.appendChild(backBtn);\r\n        transitionBtns.appendChild(nextBtn);\r\n\r\n        mainDiv.appendChild(transitionBtns);\r\n        _ViewControl__WEBPACK_IMPORTED_MODULE_1__[\"default\"].updateRoleQuantities();\r\n    }\r\n\r\n    const displayInitialPlayerRoles = (index = 0) => {\r\n        clear(mainDiv);\r\n        const gameTitle = (0,_ViewComponent__WEBPACK_IMPORTED_MODULE_0__.GameTitle)();\r\n        const container = document.createElement(\"div\");\r\n\r\n        const playerRoleDisplay = (0,_ViewComponent__WEBPACK_IMPORTED_MODULE_0__.PlayerInitialReveal)(index);\r\n\r\n        container.appendChild(playerRoleDisplay);\r\n        mainDiv.appendChild(gameTitle);\r\n        mainDiv.appendChild(container);\r\n\r\n        let nextBtn = null;\r\n        if (index < _Game__WEBPACK_IMPORTED_MODULE_2__[\"default\"].players.length - 1) {\r\n            nextBtn = _ViewComponent__WEBPACK_IMPORTED_MODULE_0__.Buttons.transitionBtn(displayInitialPlayerRoles.bind(window, index + 1), \"Next\");\r\n        } else {\r\n            nextBtn = _ViewComponent__WEBPACK_IMPORTED_MODULE_0__.Buttons.startDayBtn();\r\n        }\r\n\r\n        mainDiv.appendChild(nextBtn);\r\n    }\r\n\r\n    const displayNightActionRoles = (index = 0) => {\r\n        clear(mainDiv);\r\n        const gameTitle = (0,_ViewComponent__WEBPACK_IMPORTED_MODULE_0__.GameTitle)();\r\n        const container = document.createElement(\"div\");\r\n\r\n        const nightActionForm = (0,_ViewComponent__WEBPACK_IMPORTED_MODULE_0__.NightActionForm)(index);\r\n\r\n        container.appendChild(nightActionForm);\r\n        mainDiv.appendChild(gameTitle);\r\n        mainDiv.appendChild(container);\r\n\r\n        let nextBtn = null;\r\n        if (index < _Game__WEBPACK_IMPORTED_MODULE_2__[\"default\"].nightRoles.length - 1) {\r\n            nextBtn = _ViewComponent__WEBPACK_IMPORTED_MODULE_0__.Buttons.transitionBtn(displayNightActionRoles.bind(window, index + 1), \"Next\");\r\n        } else {\r\n            nextBtn = _ViewComponent__WEBPACK_IMPORTED_MODULE_0__.Buttons.endNightBtn();\r\n        }\r\n\r\n        nextBtn.id = \"next-btn\";\r\n        nextBtn.disabled = true;\r\n        mainDiv.appendChild(nextBtn);\r\n\r\n        _ViewControl__WEBPACK_IMPORTED_MODULE_1__[\"default\"].checkNightActionForm(nightActionForm, index);\r\n    }\r\n\r\n    const displayDay = () => {\r\n        clear(mainDiv);\r\n        const gameTitle = (0,_ViewComponent__WEBPACK_IMPORTED_MODULE_0__.GameTitle)();\r\n        const container = document.createElement(\"div\");\r\n        const header = document.createElement(\"h3\");\r\n        header.innerHTML = `Welcome to Day ${_Game__WEBPACK_IMPORTED_MODULE_2__[\"default\"].dayCount}.<br>Now is the time to discuss and work together to eliminate the werewolves.`;\r\n\r\n        const roleQuantitiesDisplay = (0,_ViewComponent__WEBPACK_IMPORTED_MODULE_0__.RoleQuantitiesDisplay)();\r\n\r\n        container.appendChild(header);\r\n        container.appendChild(roleQuantitiesDisplay);\r\n        mainDiv.appendChild(gameTitle);\r\n        mainDiv.appendChild(container);\r\n\r\n        const nextBtn = _ViewComponent__WEBPACK_IMPORTED_MODULE_0__.Buttons.transitionBtn(displayVotingPhase, \"Start Voting\");\r\n        mainDiv.appendChild(nextBtn);\r\n    }\r\n\r\n    const displayVotingPhase = () => {\r\n        clear(mainDiv);\r\n        const gameTitle = (0,_ViewComponent__WEBPACK_IMPORTED_MODULE_0__.GameTitle)();\r\n        const container = document.createElement(\"div\");\r\n        const header = document.createElement(\"h3\");\r\n        header.textContent = \"Point your finger towards the most suspiscious player. In 3, 2, 1!\";\r\n\r\n        const votingList = document.createElement(\"div\");\r\n        updatePlayersList(votingList, _ViewComponent__WEBPACK_IMPORTED_MODULE_0__.Buttons.voteOutBtn, { isAlive: true });\r\n\r\n        container.appendChild(header);\r\n        container.appendChild(votingList);\r\n        mainDiv.appendChild(gameTitle);\r\n        mainDiv.appendChild(container);\r\n\r\n        const skipBtn = _ViewComponent__WEBPACK_IMPORTED_MODULE_0__.Buttons.transitionBtn(displayVoteResults.bind(window, \"SKIPPED\"), \"SKIP\");\r\n        mainDiv.appendChild(skipBtn);\r\n    }\r\n\r\n    const displayVoteResults = (votedOutName) => {\r\n        clear(mainDiv);\r\n        const gameTitle = (0,_ViewComponent__WEBPACK_IMPORTED_MODULE_0__.GameTitle)();\r\n        const container = document.createElement(\"div\");\r\n        const results = document.createElement(\"h2\");\r\n        results.innerHTML = `The result of the voting phase is:<br><span id=\"voted-out\"></span>`;\r\n\r\n        container.appendChild(results);\r\n        mainDiv.appendChild(gameTitle);\r\n        mainDiv.appendChild(container);\r\n\r\n        const votedOutSpan = container.querySelector(\"#voted-out\");\r\n        votedOutSpan.textContent = votedOutName;\r\n\r\n        const nextBtn = _ViewComponent__WEBPACK_IMPORTED_MODULE_0__.Buttons.checkContinueToNightBtn();\r\n        mainDiv.appendChild(nextBtn);\r\n    }\r\n\r\n    const displayStartingNightPhase = () => {\r\n        clear(mainDiv);\r\n        const gameTitle = (0,_ViewComponent__WEBPACK_IMPORTED_MODULE_0__.GameTitle)();\r\n        const container = document.createElement(\"div\");\r\n        const header = document.createElement(\"h3\");\r\n        header.textContent = \"The night has come. Everyone close your eyes!\";\r\n\r\n        container.appendChild(header);\r\n        mainDiv.appendChild(gameTitle);\r\n        mainDiv.appendChild(container);\r\n\r\n        const startNightBtn = _ViewComponent__WEBPACK_IMPORTED_MODULE_0__.Buttons.transitionBtn(displayNightActionRoles.bind(window, 0), \"Start Night\");\r\n        mainDiv.appendChild(startNightBtn);\r\n    }\r\n\r\n    const displayNightResults = (killedNames) => {\r\n        clear(mainDiv);\r\n        const gameTitle = (0,_ViewComponent__WEBPACK_IMPORTED_MODULE_0__.GameTitle)();\r\n        const container = document.createElement(\"div\");\r\n        const results = document.createElement(\"h2\");\r\n        results.innerHTML = `During the night,<br><span id=\"killed\"></span><br>is found dead.`;\r\n\r\n        container.appendChild(results);\r\n        mainDiv.appendChild(gameTitle);\r\n        mainDiv.appendChild(container);\r\n\r\n        const killedSpan = container.querySelector(\"#killed\");\r\n        killedSpan.textContent = killedNames ? killedNames : \"NO ONE\";\r\n\r\n        const startDayBtn = _ViewComponent__WEBPACK_IMPORTED_MODULE_0__.Buttons.startDayBtn();\r\n        mainDiv.appendChild(startDayBtn);\r\n    }\r\n\r\n    const displayGameOver = () => {\r\n        clear(mainDiv);\r\n        const winner = _Game__WEBPACK_IMPORTED_MODULE_2__[\"default\"].winner\r\n        const gameTitle = (0,_ViewComponent__WEBPACK_IMPORTED_MODULE_0__.GameTitle)();\r\n        const container = document.createElement(\"div\");\r\n        const playersList = document.createElement(\"div\");\r\n        (0,_ViewComponent__WEBPACK_IMPORTED_MODULE_0__.GameOverList)(winner).forEach((playerNode) => playersList.appendChild(playerNode));\r\n\r\n        const results = document.createElement(\"h2\");\r\n        results.innerHTML = `GAME OVER<br><span id=\"winning-team\"></span><br>WINS`;\r\n\r\n        container.appendChild(results);\r\n        container.appendChild(playersList);\r\n        mainDiv.appendChild(gameTitle);\r\n        mainDiv.appendChild(container);\r\n\r\n        const winningTeamSpan = container.querySelector(\"#winning-team\");\r\n        winningTeamSpan.textContent = \"TEAM \" + winner.toUpperCase();\r\n\r\n        const restartBtn = _ViewComponent__WEBPACK_IMPORTED_MODULE_0__.Buttons.transitionBtn(displaySelectRoleQuantities, \"PLAY AGAIN\");\r\n        mainDiv.appendChild(restartBtn);\r\n    }\r\n\r\n    return {\r\n        displayStart,\r\n        updatePlayersList,\r\n        displaySelectMode,\r\n        displaySelectRoleQuantities,\r\n        displayInitialPlayerRoles,\r\n        displayNightActionRoles,\r\n        displayStartingNightPhase,\r\n        displayDay,\r\n        displayVoteResults,\r\n        displayNightResults,\r\n        displayGameOver\r\n    }\r\n})()\r\n\r\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (View);\n\n//# sourceURL=webpack://werewolfgm/./src/View.js?");

/***/ }),

/***/ "./src/ViewComponent.js":
/*!******************************!*\
  !*** ./src/ViewComponent.js ***!
  \******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AddPlayerForm: () => (/* binding */ AddPlayerForm),\n/* harmony export */   Buttons: () => (/* binding */ Buttons),\n/* harmony export */   GameOverList: () => (/* binding */ GameOverList),\n/* harmony export */   GameTitle: () => (/* binding */ GameTitle),\n/* harmony export */   NightActionForm: () => (/* binding */ NightActionForm),\n/* harmony export */   PlayerInitialReveal: () => (/* binding */ PlayerInitialReveal),\n/* harmony export */   PlayersNodeList: () => (/* binding */ PlayersNodeList),\n/* harmony export */   RoleQuantitiesDisplay: () => (/* binding */ RoleQuantitiesDisplay),\n/* harmony export */   RoleQuantitiesForm: () => (/* binding */ RoleQuantitiesForm)\n/* harmony export */ });\n/* harmony import */ var _Game__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Game */ \"./src/Game.js\");\n/* harmony import */ var _Roles__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Roles */ \"./src/Roles.js\");\n/* harmony import */ var _ViewControl__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./ViewControl */ \"./src/ViewControl.js\");\n\r\n\r\n\r\n\r\nconst GameTitle = () => {\r\n    const titleContainer = document.createElement(\"div\");\r\n\r\n    const mainTitle = document.createElement(\"h1\");\r\n    mainTitle.textContent = \"The Werewolf Game\";\r\n\r\n    titleContainer.appendChild(mainTitle);\r\n    return titleContainer;\r\n}\r\n\r\nconst AddPlayerForm = () => {\r\n    const form = document.createElement(\"form\");\r\n\r\n    const input = document.createElement(\"input\");\r\n    input.id = \"player-name\";\r\n    input.name = \"player-name\";\r\n    input.required = true;\r\n    input.autocomplete = \"off\";\r\n    input.placeholder = \"Enter player name\";\r\n\r\n    const label = document.createElement(\"label\");\r\n    label.textContent = \"New Player Name: \";\r\n    label.htmlFor = \"player-name\";\r\n\r\n    const addPlayerBtn = document.createElement(\"button\");\r\n    addPlayerBtn.textContent = \"Add Player\";\r\n    addPlayerBtn.type = \"submit\";\r\n\r\n    form.appendChild(label);\r\n    form.appendChild(input);\r\n    form.appendChild(addPlayerBtn);\r\n\r\n    form.addEventListener(\"submit\", _ViewControl__WEBPACK_IMPORTED_MODULE_2__[\"default\"].addPlayer);\r\n    return form;\r\n}\r\n\r\nconst RoleQuantitiesForm = () => {\r\n    const form = document.createElement(\"form\");\r\n    form.id = \"role-quantities-form\";\r\n\r\n    // Handle deletion of players\r\n    let total = _Game__WEBPACK_IMPORTED_MODULE_0__[\"default\"].players.length;\r\n    Object.values(_Game__WEBPACK_IMPORTED_MODULE_0__[\"default\"].roleQuantities).forEach((value) => total -= value);\r\n    if (total < 0) _Game__WEBPACK_IMPORTED_MODULE_0__[\"default\"].setRoleQuantities(null);\r\n\r\n    Object.keys(_Roles__WEBPACK_IMPORTED_MODULE_1__[\"default\"]).forEach((roleIdentifier) => {\r\n        const formGroup = document.createElement(\"div\");\r\n        const role = _Roles__WEBPACK_IMPORTED_MODULE_1__[\"default\"][roleIdentifier]();\r\n        let quantity = 0;\r\n\r\n        if (role.inputSpec.min !== 0) quantity = role.inputSpec.min;\r\n        if (_Game__WEBPACK_IMPORTED_MODULE_0__[\"default\"].roleQuantities !== null) quantity = _Game__WEBPACK_IMPORTED_MODULE_0__[\"default\"].roleQuantities[roleIdentifier];\r\n\r\n        const inputId = `role-${roleIdentifier}`;\r\n        const roleLabel = document.createElement(\"label\");\r\n        roleLabel.textContent = role.name;\r\n        roleLabel.htmlFor = inputId;\r\n\r\n        const separator = document.createElement(\"div\");\r\n        separator.textContent = \" : \";\r\n\r\n        const roleInput = document.createElement(\"input\");\r\n        roleInput.id = inputId;\r\n        roleInput.name = inputId;\r\n        roleInput.type = \"number\";\r\n        roleInput.value = quantity;\r\n        roleInput.disabled = true;\r\n\r\n        const increaseBtn = Buttons.changeRoleQuantityBtn(inputId, `+${role.inputSpec.step}`);\r\n        const decreaseBtn = Buttons.changeRoleQuantityBtn(inputId, `-${role.inputSpec.step}`);\r\n\r\n        formGroup.appendChild(roleLabel);\r\n        formGroup.appendChild(separator);\r\n        formGroup.appendChild(roleInput);\r\n        formGroup.appendChild(increaseBtn);\r\n        formGroup.appendChild(decreaseBtn);\r\n        formGroup.classList.add(\"role-input-group\");\r\n\r\n        form.appendChild(formGroup);\r\n    });\r\n\r\n    return form\r\n}\r\n\r\nconst PlayerInitialReveal = (index) => {\r\n    const container = document.createElement(\"div\");\r\n    const beforeScreen = document.createElement(\"h3\");\r\n    const afterScreen = document.createElement(\"div\");\r\n    const player = _Game__WEBPACK_IMPORTED_MODULE_0__[\"default\"].players[index];\r\n\r\n    beforeScreen.textContent = `Hand Over Device to ${player.name}: (Click Me!)`;\r\n\r\n    const afterScreenHeader = document.createElement(\"h2\");\r\n    afterScreenHeader.textContent = `You are a ${player.role.name}`;\r\n    afterScreen.appendChild(afterScreenHeader);\r\n\r\n    if (\"onInitialReveal\" in player.role) {\r\n        const bonusInfo = player.role.onInitialReveal();\r\n        const element = document.createElement(\"h3\");\r\n        element.innerHTML = bonusInfo.join(\"<br>\");\r\n        afterScreen.appendChild(element);\r\n    }\r\n\r\n    const description = document.createElement(\"p\");\r\n    description.innerHTML = player.role.description.join(\"<br>\");\r\n    afterScreen.appendChild(description);\r\n\r\n    beforeScreen.addEventListener(\"click\", (e) => {\r\n        let confirmation = confirm(`Confirming identity of: ${player.name}`);\r\n        if (confirmation) {\r\n            beforeScreen.replaceWith(afterScreen);\r\n        }\r\n    })\r\n\r\n    container.appendChild(beforeScreen);\r\n    return container;\r\n}\r\n\r\nconst NightActionForm = (index) => {\r\n    const container = document.createElement(\"div\");\r\n    const roleIdentifier = _Game__WEBPACK_IMPORTED_MODULE_0__[\"default\"].nightRoles[index];\r\n    const role = _Roles__WEBPACK_IMPORTED_MODULE_1__[\"default\"][roleIdentifier]();\r\n\r\n    const roleInfo = document.createElement(\"div\");\r\n    const header = document.createElement(\"h3\");\r\n    header.textContent = \"Night Action for role: \" + role.name;\r\n    const desc = document.createElement(\"p\");\r\n    desc.innerHTML = role.description.join(\"<br>\");\r\n    roleInfo.appendChild(header);\r\n    roleInfo.appendChild(desc);\r\n\r\n    Object.entries(role.abilities).forEach(([abilityName, targetAttr]) => {\r\n        const form = document.createElement(\"form\");\r\n        const actionButton = Buttons.actionBtn(abilityName);\r\n        const possibleTargets = _Game__WEBPACK_IMPORTED_MODULE_0__[\"default\"].findPlayersByAttr(targetAttr);\r\n        possibleTargets.forEach((player) => {\r\n            const formGroup = document.createElement(\"div\");\r\n            const inputId = abilityName + \"-\" + player.id;\r\n            const inputName = roleIdentifier + \"-\" + abilityName;\r\n            const label = document.createElement(\"label\");\r\n            label.textContent = player.name;\r\n            label.htmlFor = inputId;\r\n            const input = document.createElement(\"input\");\r\n            input.required = true;\r\n            input.type = \"radio\";\r\n            input.id = inputId;\r\n            input.name = inputName;\r\n            input.value = player.id;\r\n\r\n            formGroup.appendChild(input);\r\n            formGroup.appendChild(label);\r\n            form.appendChild(formGroup);\r\n        });\r\n\r\n        form.addEventListener(\"submit\", _ViewControl__WEBPACK_IMPORTED_MODULE_2__[\"default\"].handleNightAction);\r\n        form.appendChild(actionButton);\r\n\r\n        // const confirmation = document.createElement(\"h2\");\r\n        // confirmation.textContent = `Players with role of ${role.name}, Open Your Eyes. (Click Me!)`;\r\n        // confirmation.addEventListener(\"click\", (e) => {\r\n        //     if (confirm(\"Start night action of role: \" + role.name)) confirmation.replaceWith(form);\r\n        //     ViewControl.checkNightActionForm(form, index);\r\n        // })\r\n\r\n        container.appendChild(roleInfo);\r\n        container.appendChild(form);\r\n    })\r\n\r\n    return container\r\n}\r\n\r\n\r\nconst RoleQuantitiesDisplay = () => {\r\n    const display = document.createElement(\"div\");\r\n    Object.entries(_Game__WEBPACK_IMPORTED_MODULE_0__[\"default\"].roleQuantities).forEach(([roleIdentifier, count]) => {\r\n        if (count <= 0) return\r\n        const role = _Roles__WEBPACK_IMPORTED_MODULE_1__[\"default\"][roleIdentifier]();\r\n        const container = document.createElement(\"div\");\r\n        const roleName = document.createElement(\"h5\");\r\n        roleName.textContent = role.name + \" :\";\r\n        const roleCount = document.createElement(\"p\");\r\n        roleCount.textContent = count;\r\n\r\n        container.appendChild(roleName);\r\n        container.appendChild(roleCount);\r\n        display.appendChild(container);\r\n    })\r\n\r\n    return display\r\n}\r\n\r\nconst PlayersNodeList = (attr = null) => {\r\n    const playersNodeList = [];\r\n    const players = (attr === null) ? _Game__WEBPACK_IMPORTED_MODULE_0__[\"default\"].players : _Game__WEBPACK_IMPORTED_MODULE_0__[\"default\"].findPlayersByAttr(attr);\r\n\r\n    players.forEach((player) => {\r\n        const playerElement = document.createElement(\"li\");\r\n        playerElement.textContent = player.name;\r\n        playerElement.setAttribute(\"data-id\", player.id);\r\n        playersNodeList.push(playerElement);\r\n    });\r\n\r\n    return playersNodeList\r\n}\r\n\r\nconst GameOverList = (winner) => {\r\n    const playerNodes = PlayersNodeList();\r\n    playerNodes.map((node) => {\r\n        const playerId = parseInt(node.getAttribute(\"data-id\"))\r\n        const player = _Game__WEBPACK_IMPORTED_MODULE_0__[\"default\"].getPlayerById(playerId);\r\n        node.textContent += ` (${player.role.name})`;\r\n        if (player.role.team === winner) node.style.color = \"red\";\r\n    })\r\n\r\n    return playerNodes;\r\n}\r\n\r\nconst Buttons = (function () {\r\n    const removePlayerBtn = (id) => {\r\n        const button = document.createElement(\"button\");\r\n        button.setAttribute(\"data-id\", id);\r\n        button.textContent = \"X\";\r\n        button.addEventListener(\"click\", _ViewControl__WEBPACK_IMPORTED_MODULE_2__[\"default\"].deletePlayer, { once: true });\r\n\r\n        return button;\r\n    }\r\n\r\n    const voteOutBtn = (id) => {\r\n        const button = document.createElement(\"button\");\r\n        button.setAttribute(\"data-id\", id);\r\n        button.textContent = \"Vote Out\";\r\n        button.addEventListener(\"click\", _ViewControl__WEBPACK_IMPORTED_MODULE_2__[\"default\"].voteOutPlayer, { once: true });\r\n\r\n        return button;\r\n    }\r\n\r\n    const actionBtn = (abilityName) => {\r\n        const button = document.createElement(\"button\");\r\n        button.type = \"submit\";\r\n        button.textContent = abilityName;\r\n\r\n        return button;\r\n    }\r\n\r\n    const selectModeBtn = (gameMode) => {\r\n        const button = document.createElement(\"button\");\r\n        button.value = gameMode;\r\n        // Maps gameMode to its description\r\n        const info = {\r\n            \"handOver\": {\r\n                \"header\": \"Hand Over Mode\",\r\n                \"description\": \"Hand Over device to each player.\",\r\n            },\r\n            \"gameMaster\": {\r\n                \"header\": \"Game Master Mode\",\r\n                \"description\": \"One player acts as a Game Master.\",\r\n            },\r\n        }\r\n\r\n        const header = document.createElement(\"h4\");\r\n        header.textContent = info[gameMode][\"header\"];\r\n        const desc = document.createElement(\"p\");\r\n        desc.textContent = info[gameMode][\"description\"];\r\n\r\n        button.appendChild(header);\r\n        button.appendChild(desc);\r\n        button.addEventListener(\"click\", _ViewControl__WEBPACK_IMPORTED_MODULE_2__[\"default\"].selectGameMode, true);\r\n\r\n        return button\r\n    }\r\n\r\n    const transitionBtn = (nextPageCallback, textContent) => {\r\n        const button = document.createElement(\"button\");\r\n        button.textContent = textContent;\r\n        button.addEventListener(\"click\", nextPageCallback, { once: true });\r\n\r\n        return button;\r\n    }\r\n\r\n    const changeRoleQuantityBtn = (inputId, changeInQuantity) => {\r\n        const button = document.createElement(\"button\");\r\n        button.setAttribute(\"data-targetRole\", inputId);\r\n        button.value = parseInt(changeInQuantity);\r\n        button.type = \"button\";\r\n        button.textContent = changeInQuantity;\r\n        button.addEventListener(\"click\", _ViewControl__WEBPACK_IMPORTED_MODULE_2__[\"default\"].changeRoleQuantity);\r\n\r\n        return button;\r\n    }\r\n\r\n    const startGameBtn = () => {\r\n        const button = document.createElement(\"button\");\r\n        button.textContent = \"Start Game\";\r\n        button.addEventListener(\"click\", _ViewControl__WEBPACK_IMPORTED_MODULE_2__[\"default\"].startGame);\r\n\r\n        return button;\r\n    }\r\n\r\n    const startDayBtn = () => {\r\n        const button = document.createElement(\"button\");\r\n        button.textContent = \"Start Day\";\r\n        button.addEventListener(\"click\", _ViewControl__WEBPACK_IMPORTED_MODULE_2__[\"default\"].startDay);\r\n\r\n        return button;\r\n    }\r\n\r\n    const checkContinueToNightBtn = () => {\r\n        const button = document.createElement(\"button\");\r\n        button.textContent = \"Start Night\";\r\n        button.addEventListener(\"click\", _ViewControl__WEBPACK_IMPORTED_MODULE_2__[\"default\"].startNight);\r\n\r\n        return button;\r\n    }\r\n\r\n    const endNightBtn = () => {\r\n        const button = document.createElement(\"button\");\r\n        button.textContent = \"End Night\";\r\n        button.addEventListener(\"click\", _ViewControl__WEBPACK_IMPORTED_MODULE_2__[\"default\"].endNight);\r\n\r\n        return button;\r\n    }\r\n\r\n    return {\r\n        removePlayerBtn,\r\n        transitionBtn,\r\n        selectModeBtn,\r\n        changeRoleQuantityBtn,\r\n        actionBtn,\r\n        startGameBtn,\r\n        startDayBtn,\r\n        voteOutBtn,\r\n        checkContinueToNightBtn,\r\n        endNightBtn\r\n    }\r\n})()\r\n\r\n\n\n//# sourceURL=webpack://werewolfgm/./src/ViewComponent.js?");

/***/ }),

/***/ "./src/ViewControl.js":
/*!****************************!*\
  !*** ./src/ViewControl.js ***!
  \****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _Game__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Game */ \"./src/Game.js\");\n/* harmony import */ var _Player__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Player */ \"./src/Player.js\");\n/* harmony import */ var _Roles__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Roles */ \"./src/Roles.js\");\n/* harmony import */ var _View__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./View */ \"./src/View.js\");\n/* harmony import */ var _ViewComponent__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./ViewComponent */ \"./src/ViewComponent.js\");\n\r\n\r\n\r\n\r\n\r\n\r\nconst ViewControl = (function () {\r\n    let gameMode = null;\r\n    const setGameMode = (newGameMode) => gameMode = newGameMode;\r\n\r\n    const addPlayer = (e) => {\r\n        e.preventDefault();\r\n\r\n        const playerName = document.querySelector(\"#player-name\").value;\r\n        const player = (0,_Player__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(playerName);\r\n        const playerList = document.querySelector(\"#players-list\");\r\n        _Game__WEBPACK_IMPORTED_MODULE_0__[\"default\"].addPlayer(player);\r\n        _View__WEBPACK_IMPORTED_MODULE_3__[\"default\"].updatePlayersList(playerList, _ViewComponent__WEBPACK_IMPORTED_MODULE_4__.Buttons.removePlayerBtn);\r\n\r\n        document.querySelector(\"#player-name\").value = \"\";\r\n        if (_Game__WEBPACK_IMPORTED_MODULE_0__[\"default\"].players.length >= 3) document.querySelector(\"#next-btn\").disabled = false;\r\n    };\r\n\r\n    const deletePlayer = (e) => {\r\n        const playerList = document.querySelector(\"#players-list\");\r\n        const targetId = parseInt(e.target.getAttribute(\"data-id\"));\r\n        _Game__WEBPACK_IMPORTED_MODULE_0__[\"default\"].removePlayerWithId(targetId);\r\n\r\n        _View__WEBPACK_IMPORTED_MODULE_3__[\"default\"].updatePlayersList(playerList, _ViewComponent__WEBPACK_IMPORTED_MODULE_4__.Buttons.removePlayerBtn);\r\n        if (_Game__WEBPACK_IMPORTED_MODULE_0__[\"default\"].players.length < 3) document.querySelector(\"#next-btn\").disabled = true;\r\n    };\r\n\r\n    const selectGameMode = (e) => {\r\n        const newGameMode = e.target.value ? e.target.value : e.target.parentElement.value;\r\n\r\n        setGameMode(newGameMode);\r\n        _View__WEBPACK_IMPORTED_MODULE_3__[\"default\"].displaySelectRoleQuantities();\r\n    }\r\n\r\n    const changeRoleQuantity = (e) => {\r\n        const target = e.target;\r\n        const changeInValue = target.value;\r\n        const inputId = target.getAttribute(\"data-targetRole\");\r\n\r\n        const targetInput = document.querySelector(`input[id=\"${inputId}\"]`);\r\n        targetInput.value = parseInt(targetInput.value) + parseInt(changeInValue);\r\n\r\n        updateRoleQuantities();\r\n    }\r\n\r\n    const getAmountUnallocated = () => {\r\n        const roleQuantitiesForm = document.querySelector(\"#role-quantities-form\");\r\n        let total = 0;\r\n        roleQuantitiesForm.querySelectorAll(\"input\").forEach((input) => total += parseInt(input.value))\r\n\r\n        return _Game__WEBPACK_IMPORTED_MODULE_0__[\"default\"].players.length - total;\r\n    }\r\n\r\n    const updateRoleQuantities = () => {\r\n        const amountUnallocated = getAmountUnallocated();\r\n        const amountUnallocatedDisplay = document.querySelector(\"#amountUnallocated\");\r\n        amountUnallocatedDisplay.textContent = amountUnallocated;\r\n\r\n        const roleQuantitiesForm = document.querySelector(\"#role-quantities-form\");\r\n        roleQuantitiesForm.querySelectorAll(\"input\").forEach((input) => {\r\n            const formGroup = input.parentElement;\r\n            const buttons = formGroup.querySelectorAll(\"button\");\r\n            const inputValue = parseInt(input.value);\r\n            const inputRole = _Roles__WEBPACK_IMPORTED_MODULE_2__[\"default\"][input.id.substring(5)]();\r\n\r\n            buttons.forEach((btn) => {\r\n                const valueChange = parseInt(btn.value);\r\n                btn.disabled = !(valueChange <= amountUnallocated)\r\n                    || (valueChange > 0 && inputValue == inputRole.inputSpec.max)\r\n                    || (valueChange < 0 && inputValue == inputRole.inputSpec.min);\r\n            })\r\n        })\r\n\r\n        const startBtn = document.querySelector(\"#start-game-btn\");\r\n        startBtn.disabled = amountUnallocated !== 0;\r\n    }\r\n\r\n    const startGame = (e) => {\r\n        e.preventDefault();\r\n        const form = document.querySelector(\"#role-quantities-form\");\r\n        const roleQuantities = {};\r\n        form.querySelectorAll(\"input\").forEach((input) => {\r\n            const roleIdentifier = input.id.substring(5);\r\n            const quantity = parseInt(input.value);\r\n            roleQuantities[roleIdentifier] = quantity;\r\n        })\r\n\r\n        _Game__WEBPACK_IMPORTED_MODULE_0__[\"default\"].setRoleQuantities(roleQuantities);\r\n        _Game__WEBPACK_IMPORTED_MODULE_0__[\"default\"].start();\r\n        _View__WEBPACK_IMPORTED_MODULE_3__[\"default\"].displayInitialPlayerRoles();\r\n    }\r\n\r\n    const startDay = (e) => {\r\n        _Game__WEBPACK_IMPORTED_MODULE_0__[\"default\"].addDayCount();\r\n        if (_Game__WEBPACK_IMPORTED_MODULE_0__[\"default\"].isGameOver) {\r\n            _View__WEBPACK_IMPORTED_MODULE_3__[\"default\"].displayGameOver();\r\n        } else {\r\n            _View__WEBPACK_IMPORTED_MODULE_3__[\"default\"].displayDay();\r\n        }\r\n    }\r\n\r\n    const voteOutPlayer = (e) => {\r\n        const targetId = parseInt(e.target.getAttribute(\"data-id\"));\r\n        const player = _Game__WEBPACK_IMPORTED_MODULE_0__[\"default\"].getPlayerById(targetId);\r\n        _Game__WEBPACK_IMPORTED_MODULE_0__[\"default\"].voteOut(targetId);\r\n        _View__WEBPACK_IMPORTED_MODULE_3__[\"default\"].displayVoteResults(player.name);\r\n    }\r\n\r\n\r\n    const startNight = (e) => {\r\n        if (_Game__WEBPACK_IMPORTED_MODULE_0__[\"default\"].isGameOver) {\r\n            _View__WEBPACK_IMPORTED_MODULE_3__[\"default\"].displayGameOver();\r\n        } else {\r\n            _Game__WEBPACK_IMPORTED_MODULE_0__[\"default\"].startNight();\r\n            _View__WEBPACK_IMPORTED_MODULE_3__[\"default\"].displayStartingNightPhase();\r\n        }\r\n    }\r\n\r\n    const endNight = (e) => {\r\n        const killedPlayersNames = _Game__WEBPACK_IMPORTED_MODULE_0__[\"default\"].endNight().map((player) => player.name);\r\n        _View__WEBPACK_IMPORTED_MODULE_3__[\"default\"].displayNightResults(killedPlayersNames.join(\", \"));\r\n    }\r\n\r\n    const handleNightAction = (e) => {\r\n        e.preventDefault();\r\n        const form = e.target;\r\n        const formData = Object.fromEntries(new FormData(e.target));\r\n        let canContinue = false;\r\n        Object.entries(formData).forEach(([inputName, value]) => {\r\n            inputName = inputName.split(\"-\");\r\n            const roleIdentifier = inputName[0];\r\n            const abilityName = inputName[1];\r\n            const role = _Roles__WEBPACK_IMPORTED_MODULE_2__[\"default\"][roleIdentifier]();\r\n            const playerInstanceOfRole = _Game__WEBPACK_IMPORTED_MODULE_0__[\"default\"].findPlayersByAttr({ roleName: role.name })[0]\r\n            canContinue = playerInstanceOfRole.role[abilityName](value);\r\n        });\r\n\r\n        form.querySelectorAll(\"input\").forEach((input) => input.disabled = true);\r\n        e.submitter.disabled = true;\r\n        document.querySelector(\"#next-btn\").disabled = !canContinue;\r\n    }\r\n\r\n    const checkNightActionForm = (NightActionForm, nightRoleIndex) => {\r\n        const roleIdentifier = _Game__WEBPACK_IMPORTED_MODULE_0__[\"default\"].nightRoles[nightRoleIndex];\r\n        const roleName = _Roles__WEBPACK_IMPORTED_MODULE_2__[\"default\"][roleIdentifier]().name;\r\n        const playerWithRole = _Game__WEBPACK_IMPORTED_MODULE_0__[\"default\"].findPlayersByAttr({ roleName: roleName })[0]; // Assumes there is only one player of this role\r\n        // console.log(playerWithRole.role.abilityUse);\r\n        if (playerWithRole.role.abilityUse <= 0 || !playerWithRole.isAlive) {\r\n            NightActionForm.querySelectorAll(\"input\").forEach((input) => input.disabled = true);\r\n            NightActionForm.querySelector(\"button\").disabled = true;\r\n            document.querySelector(\"#next-btn\").disabled = false;\r\n        }\r\n    }\r\n\r\n    return {\r\n        addPlayer,\r\n        deletePlayer,\r\n        selectGameMode,\r\n        changeRoleQuantity,\r\n        updateRoleQuantities,\r\n        startGame,\r\n        startDay,\r\n        startNight,\r\n        endNight,\r\n        voteOutPlayer,\r\n        setGameMode,\r\n        handleNightAction,\r\n        checkNightActionForm\r\n    }\r\n})()\r\n\r\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (ViewControl);\n\n//# sourceURL=webpack://werewolfgm/./src/ViewControl.js?");

/***/ }),

/***/ "./src/index.js":
/*!**********************!*\
  !*** ./src/index.js ***!
  \**********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _GameTests__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./GameTests */ \"./src/GameTests.js\");\n/* harmony import */ var _View__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./View */ \"./src/View.js\");\n\r\n\r\n\r\nconst roleQuantities = {\r\n    \"citizen\": 4,\r\n    \"werewolf\": 2,\r\n    \"lover\": 2,\r\n    \"doctor\": 1,\r\n    \"bodyguard\": 1\r\n};\r\n\r\nlet numPlayers = 0;\r\nObject.values(roleQuantities).forEach((quantity) => numPlayers += quantity);\r\n\r\n// Test.roleDistributionTest(numPlayers, roleQuantities, 1000);\r\n// Test.cycleTest(numPlayers, roleQuantities);\r\n_GameTests__WEBPACK_IMPORTED_MODULE_0__[\"default\"].nSimulations(numPlayers, roleQuantities, 10000);\r\n\r\n_View__WEBPACK_IMPORTED_MODULE_1__[\"default\"].displayStart();\n\n//# sourceURL=webpack://werewolfgm/./src/index.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = __webpack_require__("./src/index.js");
/******/ 	
/******/ })()
;